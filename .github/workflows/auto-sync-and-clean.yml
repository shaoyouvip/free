name: Auto Sync Fork & Clean Subscription

on:
  schedule:
    - cron: '0 16 * * *'   # 每天北京时间 0 点执行（UTC 16 点）
  workflow_dispatch:        # 允许手动触发
  push:
    branches:
      - main                # 当 main 有更新时也执行

jobs:
  sync_and_clean:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      # === Step 1: 拉取仓库 ===
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # === Step 2: 配置 Git 用户信息 ===
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      # === Step 3: 同步上游仓库 ===
      - name: Add upstream and fetch
        run: |
          echo "🔄 添加上游仓库并同步最新提交..."
          git remote add upstream https://github.com/shaoyouvip/free.git || true
          git fetch upstream
          git checkout main
          git rebase upstream/main || (git rebase --abort && git reset --hard upstream/main)
          echo "✅ 上游同步完成。"

      # === Step 4: 下载并清理订阅文件（覆盖原文件） ===
      - name: Download and clean subscription
        run: |
          echo "🌐 正在下载订阅文件..."
          # 使用 raw.githubusercontent 的常见形式，避免 refs/heads 混淆
          curl -s -L "https://raw.githubusercontent.com/tonygyf/free/main/base64.txt" -o base64.txt

          if [ ! -s base64.txt ]; then
            echo "❌ 下载失败或文件为空，退出。"
            exit 1
          fi

          echo "🧹 删除行尾或独立的时间戳注释（例如 ' # 2025-10-23 19:13:16' 或单独一行 '# 2025-10-23'）..."
          # 将匹配并删除行尾或整行的时间戳注释：
          # - 匹配可选空白，#，可选空白，日期（yyyy-mm-dd）和可选时间部分
          # - 仅删除该注释部分，不破坏其它内容
          sed -E -i 's/[[:space:]]*# *[0-9]{4}-[0-9]{2}-[0-9]{2}([ T][0-9]{2}:[0-9]{2}:[0-9]{2})?$//g' base64.txt

          # （可选）去除行尾多余空白
          sed -i 's/[[:space:]]\+$//' base64.txt

          echo "✅ 清理完成，生成并覆盖 base64.txt"
          ls -lh base64.txt

      # === Step 5: 提交并推送修改（覆盖原文件） ===
      - name: Commit and push changes
        run: |
          git add base64.txt
          if git diff --cached --quiet; then
            echo "ℹ️ 无变化，无需提交。"
          else
            echo "📦 检测到变化，提交中..."
            git commit -m "Auto-sync upstream and clean subscription (normalize base64.txt) [skip ci]"
            git push origin main --force
            echo "✅ 提交并推送完成。"
          fi

      # === Step 6: 完成提示 ===
      - name: Done
        run: echo "🎉 所有任务执行完毕。"
